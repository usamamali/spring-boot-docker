# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/openjdk:8u171-jdk
      #- image: circleci/openjdk:8-jdk
   
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/spring-boot-docker

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: 
          name: Maven Dependency Go Offline
          command: mvn dependency:go-offline

       # run tests!
      - run: 
          name: Test Application
          command: ./mvnw -e clean test

      - setup_remote_docker

      - run:
          name: Build App Package
          command: ./mvnw -DskipTests clean package

      - run:
          name: Set convenience environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:${CIRCLE_SHA1}"' >> $BASH_ENV
        
      - run:
          name: Build Image AWS
          command: |
            docker build -t $FULL_IMAGE_NAME .

      - run:
          name: Build Docker Image
          command: ./mvnw dockerfile:build

      - run:
          name: Test AWS image
          command: |
            docker run -d --name built-image1 $FULL_IMAGE_NAME
            sleep 15
            docker run --network container:built-image1 appropriate/curl --retry 10 --retry-connrefused http://localhost:9090/healthcheck/

      - run:
          name: Test Docker Image
          command: |
            docker run -d -p 7070:9090 --name built-image usamamali/hello-spring-boot-docker
            sleep 15
            docker run --network container:built-image appropriate/curl --retry 10 --retry-connrefused http://localhost:7070/healthcheck/ | grep "I am alive"

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - deploy:
          name: Push app to Docker Hub
          command: |
            docker images
            docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag usamamali/hello-spring-boot-docker $DOCKER_HUB_USER_ID/hello-spring-boot-docker:$CIRCLE_SHA1
            docker tag usamamali/hello-spring-boot-docker $DOCKER_HUB_USER_ID/hello-spring-boot-docker:latest
            docker push usamamali/hello-spring-boot-docker:$CIRCLE_SHA1
            docker push usamamali/hello-spring-boot-docker:latest
