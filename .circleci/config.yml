# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      #- enabled: true
      # specify the version you desire here
      #- image: circleci/openjdk:8u171-jdk
      - image: circleci/openjdk:8-jdk
   
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/spring-boot-docker

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

       # run tests!
      - run: ./mvnw -e clean test

      - run:
          name: Build App
          command: ./mvnw install

      - setup_remote_docker

      - run:
          name: Build Docker Image
          command: ./mvnw dockerfile:build

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      #- setup_remote_docker

      - deploy:
          name: Push app to Docker Hub
          command: |
            docker --version
            docker images
            docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag hellospringwithdocker_hello-sprint-boot-docker $DOCKER_HUB_USER_ID/hellospringwithdocker:$CIRCLE_SHA1
            docker tag hellospringwithdocker_hello-sprint-boot-docker $DOCKER_HUB_USER_ID/hellospringwithdocker:latest
            #docker push $DOCKER_HUB_USR_ID/hellospringwithdocker:$CIRCLE_SHA1
